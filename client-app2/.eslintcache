[{"C:\\UdemyProjects\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\UdemyProjects\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx":"4","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\store.ts":"11","C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"12","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx":"13","C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"14","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\index.tsx":"15","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\reportWebVitals.ts":"16","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\stores\\store.ts":"17","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\App.tsx":"18","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\stores\\activityStore.ts":"19","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\NavBar.tsx":"20","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\home\\HomePage.tsx":"21","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\form\\ActivityForm.tsx":"22","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"23","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetails.tsx":"24","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\api\\agent.ts":"25","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\LoadingComponent.tsx":"26","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityList.tsx":"27","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityListItem.tsx":"28","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityListTable.tsx":"29","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\hook\\useDarkMode.js":"30","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityHeading.tsx":"31","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx":"32","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx":"33","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx":"34","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedChat.tsx":"35"},{"size":741,"mtime":1637686915129,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1607146204000,"results":"38","hashOfConfig":"37"},{"size":1211,"mtime":1637702984949,"results":"39","hashOfConfig":"37"},{"size":740,"mtime":1637689562646,"results":"40","hashOfConfig":"37"},{"size":932,"mtime":1637703837514,"results":"41","hashOfConfig":"37"},{"size":845,"mtime":1637707336687,"results":"42","hashOfConfig":"37"},{"size":1643,"mtime":1637700364412,"results":"43","hashOfConfig":"37"},{"size":2779,"mtime":1637703656631,"results":"44","hashOfConfig":"37"},{"size":1307,"mtime":1637703342515,"results":"45","hashOfConfig":"37"},{"size":390,"mtime":1637685521554,"results":"46","hashOfConfig":"37"},{"size":461,"mtime":1637611040241,"results":"47","hashOfConfig":"37"},{"size":5409,"mtime":1637706015498,"results":"48","hashOfConfig":"37"},{"size":356,"mtime":1637703119012,"results":"49","hashOfConfig":"37"},{"size":2233,"mtime":1637707378761,"results":"50","hashOfConfig":"37"},{"size":741,"mtime":1637686915129,"results":"51","hashOfConfig":"52"},{"size":425,"mtime":1607146204000,"results":"53","hashOfConfig":"52"},{"size":461,"mtime":1637611040241,"results":"54","hashOfConfig":"52"},{"size":1747,"mtime":1638416421106,"results":"55","hashOfConfig":"52"},{"size":5409,"mtime":1637706015498,"results":"56","hashOfConfig":"52"},{"size":4191,"mtime":1638417456536,"results":"57","hashOfConfig":"52"},{"size":345,"mtime":1638327770809,"results":"58","hashOfConfig":"52"},{"size":2779,"mtime":1637703656631,"results":"59","hashOfConfig":"52"},{"size":2740,"mtime":1638416085939,"results":"60","hashOfConfig":"52"},{"size":1392,"mtime":1638479473875,"results":"61","hashOfConfig":"52"},{"size":1307,"mtime":1638479688854,"results":"62","hashOfConfig":"52"},{"size":390,"mtime":1637685521554,"results":"63","hashOfConfig":"52"},{"size":845,"mtime":1637707336687,"results":"64","hashOfConfig":"52"},{"size":2233,"mtime":1637707378761,"results":"65","hashOfConfig":"52"},{"size":3196,"mtime":1638418077656,"results":"66","hashOfConfig":"52"},{"size":375,"mtime":1638325691936,"results":"67","hashOfConfig":"52"},{"size":780,"mtime":1638416281488,"results":"68","hashOfConfig":"52"},{"size":132,"mtime":1638479217229,"results":"69","hashOfConfig":"52"},{"size":134,"mtime":1638479181951,"results":"70","hashOfConfig":"52"},{"size":128,"mtime":1638479207074,"results":"71","hashOfConfig":"52"},{"size":128,"mtime":1638479199528,"results":"72","hashOfConfig":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"148ywoa",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1hdbttl",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"135"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\UdemyProjects\\Reactivities\\client-app\\src\\index.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],["157","158"],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\NavBar.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",["159","160"],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\api\\agent.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\store.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\home\\HomePage.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["161","162","163","164"],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\index.tsx",[],["165","166"],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\reportWebVitals.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\stores\\store.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\App.tsx",["167","168"],"import React, { useEffect, useState } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\n\nimport { observer } from 'mobx-react-lite';\nimport { Route, useLocation } from 'react-router';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\n\nfunction App() {\n  const location = useLocation(); //returns location object from router, useful for the key\n\n  const [theme, setTheme] = useState('light');\n  \n\n  function handleToggleTheme() {\n      if(theme == 'dark'){\n        setTheme('light');\n      } else {\n        setTheme('dark');\n      }\n      console.log(theme);\n      \n  }\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove('light');\n    root.classList.remove('dark');\n    root.classList.add(theme);\n  }, [theme])\n\n\n  return (\n    <div className=\"h-full bg-gray-50 dark:bg-gray-900\">\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <>\n            <NavBar setTheme={handleToggleTheme} />\n            <main >\n              <div className=\"pl-24 pr-8 py-8\">\n                <Route exact path='/activities' component={ActivityDashboard} />\n                <Route path='/activities/:id' component={ActivityDetails} />\n                <Route key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n              </div>\n\n            </main>\n          </>\n        )} />\n\n\n    </div>\n  );\n}\n\nexport default observer(App);\n","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\stores\\activityStore.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\NavBar.tsx",["169","170","171","172","173","174","175"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { Button, Container, Menu } from 'semantic-ui-react';\n\nimport { Disclosure, Transition } from '@headlessui/react'\nimport { HomeIcon, ChatAlt2Icon, CogIcon } from '@heroicons/react/outline'\nimport { PlusSmIcon } from '@heroicons/react/solid'\nimport { useDarkMode } from '../../hook/useDarkMode';\n\n\ninterface Props {\n    setTheme: () => void;\n}\n\nexport default function NavBar({ setTheme }: Props) {\n    //const {setTheme, colorTheme} = useDarkMode;\n    return (\n        <aside className=\"flex w-16 flex-col fixed inset-y-0\">\n\n            {/* Sidebar component, swap this element with another sidebar if you like */}\n            <div className=\"flex-1 flex flex-col bg-gray-50 border-r border-gray-100\">\n                <div className=\"flex-1 flex flex-col pt-5 pb-4 overflow-y-auto\">\n                    <div className=\"flex items-center justify-center flex-shrink-0 px-4\">\n                        <img\n                            className=\"block  h-8 w-auto\"\n                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                            alt=\"Workflow\"\n                        />\n                    </div>\n                    <nav className=\"mt-5 flex flex-col flex-1 px-2 space-y-1\">\n                        <NavLink\n                            key={3}\n                            href=''\n                            className='flex justify-center text-gray-700 hover:bg-gray-100 hover:text-black px-3 py-2 rounded-md text-sm font-medium'\n                            to=\"/\" exact\n                        >\n                            <HomeIcon className=\"h-6 w-6 text-black\" aria-hidden=\"true\" />\n                        </NavLink>\n                        <NavLink\n                            key={1}\n                            href=''\n                            className='flex justify-center text-gray-700 hover:bg-gray-100 hover:text-black px-3 py-2 rounded-md text-sm font-medium'\n                            to=\"/activities\"\n                        >\n                            <ChatAlt2Icon className=\"h-6 w-6 text-black\" aria-hidden=\"true\" />\n                        </NavLink>\n\n                        <Link\n                            key={2}\n                            href=''\n                            className='flex justify-center'\n                            to=\"/createActivity\"\n                        >\n                            <button\n                                type=\"button\"\n                                className=\"relative flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-500 hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-indigo-500\"\n                            >\n                                <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n\n                            </button>\n                        </Link>\n\n\n                    </nav>\n                </div>\n                <div className=\"flex-shrink-0 flex flex-col items-center\">\n                    <div className=\"p-3\">\n                        <button\n                            type=\"button\"\n                            onClick={() => setTheme()}\n                        >\n                            <CogIcon className=\"h-6 w-6 text-gray-700 hover:bg-gray-100 hover:text-black\" aria-hidden=\"true\" />\n                        </button>\n                    </div>\n                    <div className=\"border-t border-gray-600  py-3 mx-2\">\n                        <a href=\"#\" className=\"flex-shrink-0 w-full group block\">\n                            <img\n                                className=\"inline-block h-9 w-9 rounded-full\"\n                                src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                                alt=\"\"\n                            />\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n\n\n        </aside>\n\n\n\n    )\n}","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\home\\HomePage.tsx",["176"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container } from 'semantic-ui-react'\r\n\r\nexport default function HomePage () {\r\n    return (\r\n        <div style={{paddingTop: '7em'}} >\r\n            <h1>Home Page</h1>\r\n            <h3>Go to <Link to='/activities'>Activities</Link></h3>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["177","178","179","180","181","182","183","184","185","186","187","188"],"import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport {\n    ArrowNarrowLeftIcon,\n    CheckIcon,\n    HomeIcon,\n    PaperClipIcon,\n    QuestionMarkCircleIcon,\n    SearchIcon,\n    ThumbUpIcon,\n    UserIcon,\n} from '@heroicons/react/solid'\nimport ActivityList from './ActivityList';\nimport ActivityListTable from './ActivityListTable';\nimport { Switch } from '@headlessui/react'\nimport ActivityHeading from './ActivityHeading';\n\nfunction classNames(...classes: any) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default observer(function ActivityDashboard() {\n    const { activityStore } = useStore();\n    const { loadActivities, activityRegistry } = activityStore;\n\n\n    //SAMPLE DATA\n    const eventTypes = {\n        applied: { icon: UserIcon, bgColorClass: 'bg-gray-400' },\n        advanced: { icon: ThumbUpIcon, bgColorClass: 'bg-blue-500' },\n        completed: { icon: CheckIcon, bgColorClass: 'bg-green-500' },\n    }\n    const timeline = [\n        {\n            id: 1,\n            type: eventTypes.applied,\n            content: 'Applied to',\n            target: 'Front End Developer',\n            date: 'Sep 20',\n            datetime: '2020-09-20',\n        },\n        {\n            id: 2,\n            type: eventTypes.advanced,\n            content: 'Advanced to phone screening by',\n            target: 'Bethany Blake',\n            date: 'Sep 22',\n            datetime: '2020-09-22',\n        },\n        {\n            id: 3,\n            type: eventTypes.completed,\n            content: 'Completed phone screening with',\n            target: 'Martha Gardner',\n            date: 'Sep 28',\n            datetime: '2020-09-28',\n        },\n        {\n            id: 4,\n            type: eventTypes.advanced,\n            content: 'Advanced to interview by',\n            target: 'Bethany Blake',\n            date: 'Sep 30',\n            datetime: '2020-09-30',\n        },\n        {\n            id: 5,\n            type: eventTypes.completed,\n            content: 'Completed interview with',\n            target: 'Katherine Snyder',\n            date: 'Oct 4',\n            datetime: '2020-10-04',\n        },\n    ]\n\n    const [enabled, setEnabled] = useState(false);\n\n    useEffect(() => {\n        if (activityRegistry.size <= 1) loadActivities();\n    }, [activityRegistry.size, loadActivities])\n\n\n    if (activityStore.loadingInitial) return <LoadingComponent content='Loading App' />\n\n    return (\n        <div className=\"flex flex-col\">\n            <ActivityHeading/>\n            <ActivityListTable />\n\n        </div>\n    )\n})","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetails.tsx",["189","190","191","192"],"import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Grid, Image } from 'semantic-ui-react';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\n\nexport default observer(function ActivityDetails() {\n\n    const {activityStore} = useStore();\n    const {selectedActivity, loadActivity, loadingInitial} = activityStore;\n    const {id} = useParams<{id: string}>()\n\n    useEffect(() => {       \n        if(id) loadActivity(id);  \n    }, [id, loadActivity])\n\n    if(loadingInitial || !selectedActivity) return <LoadingComponent/>; //to get rid of TS error, we will always have a selected activity\n\n    return (\n        <Grid>\n            <Grid.Column width={10}>\n                <ActivityDetailedHeader/>\n                <ActivityDetailedInfo/>\n                <ActivityDetailedChat/>\n            </Grid.Column>\n            <Grid.Column width={6}>\n                <ActivityDetailedSidebar/>\n            </Grid.Column>\n        </Grid>\n    )\n})","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\api\\agent.ts",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityList.tsx",["193","194"],"import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Header, Item, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\n\nexport default observer(function ActivityList() {\n    const { activityStore } = useStore();\n    const { groupedActivities } = activityStore;\n\n\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>\n                        {group}\n                    </Header>\n\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity} />\n                    ))}\n\n                </Fragment>\n            ))}\n        </>\n\n    )\n})",["195","196"],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityListItem.tsx",["197","198","199","200"],"import React, { SyntheticEvent, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Item, Button, Label, Segment, Icon } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity'\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n\r\n\r\n    const { activityStore } = useStore();\r\n    const { deleteActivity, loading } = activityStore;\r\n\r\n    const [target, setTarget] = useState('');\r\n\r\n    //Could use Any as the type for the click event, or use SyntheticEvent for super specific\r\n    function handleActivityDelete(e: SyntheticEvent<HTMLButtonElement>, id: string) {\r\n        setTarget(e.currentTarget.name) //e.target.name for 'any' type\r\n        deleteActivity(id)\r\n    }\r\n\r\n\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image size='tiny' circular src='/assets/user.png' />\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                {activity.title}\r\n                            </Item.Header>\r\n                            <Item.Description>\r\n                                Hosted by Bob\r\n                            </Item.Description>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock' /> {activity.date}\r\n                    <Icon name='marker' /> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                Attendees go here\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button\r\n                    as={Link}\r\n                    to={`/activities/${activity.id}`}\r\n                    color=\"teal\"\r\n                    floated=\"right\"\r\n                    content=\"View\"\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}\r\n","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityListTable.tsx",["201","202","203","204"],"import { observer } from 'mobx-react-lite';\nimport { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Item, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\n\nexport default observer(function ActivityListTable() {\n    const { activityStore } = useStore();\n    const { activitiesByDate } = activityStore;\n\n\n\n    return (\n        <>\n            <table className=\"min-w-full \">\n                    <thead className=\"bg-gray-100 text-gray-500\">\n                        <tr>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider\"\n                            >\n                                Title\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider\"\n                            >\n                                Date\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider\"\n                            >\n                                Category\n                            </th>\n                            <th\n                                scope=\"col\"\n                                className=\"px-6 py-3 text-left text-xs font-medium uppercase tracking-wider\"\n                            >\n                                Description\n                            </th>\n                            <th scope=\"col\" className=\"relative px-6 py-3\">\n                                <span className=\"sr-only\">Edit</span>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bg-gray-50\">\n                        {activitiesByDate.map((activity) => (\n                            <tr key={activity.id} className=\"border-b border-gray-200 \">\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{activity.title}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{activity.date}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{activity.category}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{activity.description}</td>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                                    <Link to={`/activities/${activity.id}`} className=\"text-indigo-600 hover:text-indigo-900\">\n                                        View\n                                    </Link>\n\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n\n\n        </>\n\n    )\n})\n","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\hook\\useDarkMode.js",["205"],"\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport const useDarkMode = () => {\r\n    const [theme, setTheme] = useState('dark');\r\n    const colorTheme = theme === 'dark' ? 'light' : 'dark';\r\n    useEffect(() => {\r\n        const root = window.document.documentElement;\r\n        root.classList.add(theme);\r\n    }, [theme])\r\n\r\n    return [colorTheme, setTheme];\r\n}\r\n",["206","207"],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\dashboard\\ActivityHeading.tsx",["208"],"import { Fragment } from 'react';\r\n\r\n\r\nexport default function ActivityHeading() {\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <div className=\"flex-1 min-w-0\">\r\n            <h2 className=\"text-3xl font-bold leading-7 text-gray-900\">Activities</h2>\r\n          </div>\r\n          <div className=\"mt-4 flex md:mt-0 md:ml-4\">\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n}","C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedHeader.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedSidebar.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\UdemyProjects\\Reactivities\\client-app2\\src\\features\\activities\\details\\ActivityDetailedChat.tsx",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":3,"column":18,"nodeType":"215","messageId":"216","endLine":3,"endColumn":22},{"ruleId":"213","severity":1,"message":"217","line":3,"column":24,"nodeType":"215","messageId":"216","endLine":3,"endColumn":31},{"ruleId":"213","severity":1,"message":"218","line":3,"column":24,"nodeType":"215","messageId":"216","endLine":3,"endColumn":29},{"ruleId":"213","severity":1,"message":"219","line":17,"column":29,"nodeType":"215","messageId":"216","endLine":17,"endColumn":36},{"ruleId":"213","severity":1,"message":"220","line":19,"column":12,"nodeType":"215","messageId":"216","endLine":19,"endColumn":18},{"ruleId":"213","severity":1,"message":"221","line":22,"column":14,"nodeType":"215","messageId":"216","endLine":22,"endColumn":34},{"ruleId":"209","replacedBy":"222"},{"ruleId":"211","replacedBy":"223"},{"ruleId":"213","severity":1,"message":"224","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":19,"column":16,"nodeType":"227","messageId":"228","endLine":19,"endColumn":18},{"ruleId":"213","severity":1,"message":"229","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":16},{"ruleId":"213","severity":1,"message":"224","line":3,"column":18,"nodeType":"215","messageId":"216","endLine":3,"endColumn":27},{"ruleId":"213","severity":1,"message":"230","line":3,"column":29,"nodeType":"215","messageId":"216","endLine":3,"endColumn":33},{"ruleId":"213","severity":1,"message":"231","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":20},{"ruleId":"213","severity":1,"message":"232","line":5,"column":22,"nodeType":"215","messageId":"216","endLine":5,"endColumn":32},{"ruleId":"213","severity":1,"message":"233","line":8,"column":10,"nodeType":"215","messageId":"216","endLine":8,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":76,"column":25,"nodeType":"236","endLine":76,"endColumn":82},{"ruleId":"213","severity":1,"message":"224","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":19},{"ruleId":"213","severity":1,"message":"237","line":3,"column":10,"nodeType":"215","messageId":"216","endLine":3,"endColumn":14},{"ruleId":"213","severity":1,"message":"238","line":7,"column":5,"nodeType":"215","messageId":"216","endLine":7,"endColumn":24},{"ruleId":"213","severity":1,"message":"239","line":9,"column":5,"nodeType":"215","messageId":"216","endLine":9,"endColumn":13},{"ruleId":"213","severity":1,"message":"240","line":10,"column":5,"nodeType":"215","messageId":"216","endLine":10,"endColumn":18},{"ruleId":"213","severity":1,"message":"241","line":11,"column":5,"nodeType":"215","messageId":"216","endLine":11,"endColumn":27},{"ruleId":"213","severity":1,"message":"242","line":12,"column":5,"nodeType":"215","messageId":"216","endLine":12,"endColumn":15},{"ruleId":"213","severity":1,"message":"243","line":16,"column":8,"nodeType":"215","messageId":"216","endLine":16,"endColumn":20},{"ruleId":"213","severity":1,"message":"244","line":18,"column":10,"nodeType":"215","messageId":"216","endLine":18,"endColumn":16},{"ruleId":"213","severity":1,"message":"245","line":21,"column":10,"nodeType":"215","messageId":"216","endLine":21,"endColumn":20},{"ruleId":"213","severity":1,"message":"246","line":36,"column":11,"nodeType":"215","messageId":"216","endLine":36,"endColumn":19},{"ruleId":"213","severity":1,"message":"247","line":79,"column":12,"nodeType":"215","messageId":"216","endLine":79,"endColumn":19},{"ruleId":"213","severity":1,"message":"248","line":79,"column":21,"nodeType":"215","messageId":"216","endLine":79,"endColumn":31},{"ruleId":"213","severity":1,"message":"249","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":14},{"ruleId":"213","severity":1,"message":"229","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":16},{"ruleId":"213","severity":1,"message":"250","line":5,"column":18,"nodeType":"215","messageId":"216","endLine":5,"endColumn":22},{"ruleId":"213","severity":1,"message":"251","line":5,"column":30,"nodeType":"215","messageId":"216","endLine":5,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":3,"column":18,"nodeType":"215","messageId":"216","endLine":3,"endColumn":22},{"ruleId":"213","severity":1,"message":"217","line":3,"column":24,"nodeType":"215","messageId":"216","endLine":3,"endColumn":31},{"ruleId":"209","replacedBy":"252"},{"ruleId":"211","replacedBy":"253"},{"ruleId":"213","severity":1,"message":"218","line":3,"column":24,"nodeType":"215","messageId":"216","endLine":3,"endColumn":29},{"ruleId":"213","severity":1,"message":"219","line":17,"column":29,"nodeType":"215","messageId":"216","endLine":17,"endColumn":36},{"ruleId":"213","severity":1,"message":"220","line":19,"column":12,"nodeType":"215","messageId":"216","endLine":19,"endColumn":18},{"ruleId":"213","severity":1,"message":"221","line":22,"column":14,"nodeType":"215","messageId":"216","endLine":22,"endColumn":34},{"ruleId":"213","severity":1,"message":"254","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":16},{"ruleId":"213","severity":1,"message":"214","line":4,"column":18,"nodeType":"215","messageId":"216","endLine":4,"endColumn":22},{"ruleId":"213","severity":1,"message":"217","line":4,"column":24,"nodeType":"215","messageId":"216","endLine":4,"endColumn":31},{"ruleId":"213","severity":1,"message":"255","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":24},{"ruleId":"256","severity":1,"message":"257","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":13},{"ruleId":"209","replacedBy":"252"},{"ruleId":"211","replacedBy":"253"},{"ruleId":"213","severity":1,"message":"258","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":18},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"@typescript-eslint/no-unused-vars","'Item' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'Label' is defined but never used.","'loading' is assigned a value but never used.","'target' is assigned a value but never used.","'handleActivityDelete' is defined but never used.",["259"],["260"],"'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Menu' is defined but never used.","'Disclosure' is defined but never used.","'Transition' is defined but never used.","'useDarkMode' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Grid' is defined but never used.","'ArrowNarrowLeftIcon' is defined but never used.","'HomeIcon' is defined but never used.","'PaperClipIcon' is defined but never used.","'QuestionMarkCircleIcon' is defined but never used.","'SearchIcon' is defined but never used.","'ActivityList' is defined but never used.","'Switch' is defined but never used.","'classNames' is defined but never used.","'timeline' is assigned a value but never used.","'enabled' is assigned a value but never used.","'setEnabled' is assigned a value but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Image' is defined but never used.",["259"],["260"],"'Header' is defined but never used.","'ActivityListItem' is defined but never used.","no-unused-vars","'React' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]